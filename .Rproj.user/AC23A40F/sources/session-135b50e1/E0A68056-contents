---
date: "2023-07-26"
output: html_document
status: "offline"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

**DATA UNDERSTANDING FOR ANALYSIS**

  A Data set in table format consists of rows and column of which the first rows in the data sets is the *column names* and the first column is the *row names*.
  Each rows in the table is called *an observation*. Also, the first row, which consists of the *column names*, is the names of the variable from the data set. Each column explains or shows how the variable changes with each observation. Let us observe the table below **[fig 1.0]**
  
```{r Example 1 code, include=FALSE, paged.print=FALSE}
var_1 <- c(11, 12, 13, 14)
var_2 <- c("BA","AA", "AA", "AB")
var_3 <- c(31, 32, 33, 34)
dataset1 <- data.frame(var_1, var_2, var_3)
row.names(dataset1) <- c('Obsv_1', 'Obsv_2', 'Obsv_3', 'Obsv_4' )
```
```{r dataset1, echo=TRUE}
dataset1
```

```{r}
# NB:- Column names = names of each variable in each column of the data set.
# NB:- Each column explains the change in each variable wrt each observation
```

**PERFORMING SIMPLE DATA ANALYSIS**

  To select certain variables for analysis, use the **select()** for selecting. Before we can use this function, we need to be sure to have **tidyverse** package installed in our R or Rstudio and then call the package;
 
```{r tidyverse_package, echo=TRUE}
library(tidyverse)
```

Using the *select()*, let us say we want the first and third variable in our data sets. That is, var_1 and var_3, we use the select function select them. The select function is one of the basic syntax for *dplyr package* under *tidyverse package*. We also have other basic syntax like *mutate()*, *filter()*, *arrange()*, and *summarize()*. Check below;

```{r select(), include=FALSE, echo=TRUE}
sel <- select(dataset1, c("var_1", "var_3"))
sel
# To filter;
fil <- filter(dataset1, var_2 == "AA")
fil
```

I can both select and filter my data set.
check <http://Israel045/israelbinnarchv.netlify> for more data for practice. Thanks.

